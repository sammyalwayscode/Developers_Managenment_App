[{"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\index.js":"1","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\App.js":"2","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\reportWebVitals.js":"3","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\WelcomePage\\Welcome.js":"4","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\LoginPage\\Login.js":"5","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Base\\Base.js":"6","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\AuthFunctions\\AuthFunction.js":"7","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Home\\Home.js":"8","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Header\\Header.js":"9","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\GetStarted\\GetStarted.js":"10","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\ProjUpload\\ProjUpload.js":"11","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\UploadCard\\UpCard.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":889,"mtime":1614926674818,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5224,"mtime":1614929514433,"results":"17","hashOfConfig":"14"},{"size":3545,"mtime":1614902221535,"results":"18","hashOfConfig":"14"},{"size":397,"mtime":1614907441169,"results":"19","hashOfConfig":"14"},{"size":4140,"mtime":1614681131873,"results":"20","hashOfConfig":"14"},{"size":932,"mtime":1614928497590,"results":"21","hashOfConfig":"14"},{"size":601,"mtime":1614926711663,"results":"22","hashOfConfig":"14"},{"size":186,"mtime":1614901743357,"results":"23","hashOfConfig":"14"},{"size":2603,"mtime":1614929583731,"results":"24","hashOfConfig":"14"},{"size":1209,"mtime":1614950944568,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8pqkl1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\index.js",[],["55","56"],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\App.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\reportWebVitals.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\WelcomePage\\Welcome.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\LoginPage\\Login.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Base\\Base.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\AuthFunctions\\AuthFunction.js",["57","58","59"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { app } from '../Base/Base'\r\nimport Home from '../Home/Home'\r\nimport Login from '../LoginPage/Login'\r\nimport firebase from 'firebase'\r\n\r\nfunction AuthFunction() {\r\n\r\n\r\n  const [user, setUser] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [emailError, setEmailError] = useState('')\r\n  const [passwordError, setPasswordError] = useState('')\r\n  const [hasAccount, setHasAccount] = useState(false)\r\n\r\n\r\n  const clearInput = () => {\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\")\r\n    setPasswordError(\"\")\r\n  }\r\n\r\n\r\n  const handleLogin = () => {\r\n    clearErrors()\r\n    app.auth().signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSignUp = () => {\r\n    clearErrors()\r\n    app.auth().createUserWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleLogOut = () => {\r\n    app.auth().signOut()\r\n  }\r\n\r\n  const SignInWithGoogle = new firebase.auth.GoogleAuthProvider()\r\n  const GoogleLogin = () => {\r\n    firebase.auth().signInWithPopup(SignInWithGoogle)\r\n  }\r\n\r\n  const FacebookSignIn = new firebase.auth.FacebookAuthProvider()\r\n  const SignInWithFacebook = () => {\r\n    firebase.auth().signInWithPopup(FacebookSignIn)\r\n  }\r\n\r\n  const GitHubSignIn = new firebase.auth.GithubAuthProvider()\r\n  const SignInWithGitHub = () => {\r\n    firebase.auth().signInWithPopup(GitHubSignIn)\r\n  }\r\n\r\n  // const setUpRecaptcha = () => {\r\n  //   window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\r\n  //     'size': 'invisible',\r\n  //     'callback': (response) => {\r\n  //       // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n  //       this.onSignInSubmit();\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // onSignInSubmit = (e) => {\r\n  //   e.preventDefault()\r\n  //   // const phoneNumber = getPhoneNumberFromUserInput();\r\n  //   const phoneNumber = '+2349032676595';\r\n  //   const appVerifier = window.recaptchaVerifier;\r\n  //   firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n  //     .then((confirmationResult) => {\r\n  //       // SMS sent. Prompt user to type the code from the message, then sign the\r\n  //       // user in with confirmationResult.confirm(code).\r\n  //       window.confirmationResult = confirmationResult;\r\n  //       // ...\r\n  //     }).catch((error) => {\r\n  //       // Error; SMS not sent\r\n  //       // ...\r\n  //     });\r\n  // }\r\n\r\n\r\n  const authListener = () => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInput()\r\n        setUser(user)\r\n      } else {\r\n        setUser(\"\")\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    authListener()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <Home handleLogOut={handleLogOut} />\r\n      ) : (\r\n          <Login\r\n            email={email}\r\n            setEmail={setEmail}\r\n            password={password}\r\n            setPassword={setPassword}\r\n            handleLogin={handleLogin}\r\n            handleSignUp={handleSignUp}\r\n            hasAccount={hasAccount}\r\n            setHasAccount={setHasAccount}\r\n            emailError={emailError}\r\n            passwordError={passwordError}\r\n            GoogleLogin={GoogleLogin}\r\n            SignInWithFacebook={SignInWithFacebook}\r\n            SignInWithGitHub={SignInWithGitHub}\r\n          />\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthFunction\r\n","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Home\\Home.js",["60"],"import React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Button } from 'antd'\r\nimport { app } from '../Base/Base'\r\nimport Header from '../Header/Header';\r\nimport './Home.css'\r\nimport { Link } from 'react-router-dom';\r\nimport UpCard from '../UploadCard/UpCard';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='MainHomeDiv'>\r\n        <div className='BgContHolder'>\r\n          <Link to='/start'> <Button style={{ width: '140px', backgroundColor: 'darkorange', color: '#fff', fontWeight: 'bold' }}>Get Started</Button></Link>\r\n          <Link to='/upload'><Button style={{ width: '140px', backgroundColor: 'darkcyan', color: '#fff', fontWeight: 'bold' }}>Upload A Project</Button></Link>\r\n        </div>\r\n      </div>\r\n      <div className='CardPart'>\r\n        <div className='CardPWidthHold'>\r\n          <UpCard />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\GetStarted\\GetStarted.js",[],"C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\ProjUpload\\ProjUpload.js",["61"],"import React, { useState } from 'react'\r\nimport './ProjUpload.css'\r\nimport { Input, Button } from 'antd';\r\nimport { app } from '../Base/Base'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst db = app.firestore()\r\nfunction ProjUpload() {\r\n\r\n  const hist = useHistory();\r\n  const [title, setTitle] = useState(\"\")\r\n  const [content, setContent] = useState(\"\")\r\n  const [gitLink, setGitLink] = useState(\"\")\r\n  const [fileUrl, setFileUrl] = useState(null)\r\n\r\n  const videoUpload = async (e) => {\r\n    const File = e.target.files[0];\r\n    const storageRef = app.storage().ref();\r\n    const fileRef = storageRef.child(File.name);\r\n    console.log(File);\r\n\r\n    await fileRef.put(File);\r\n    setFileUrl(await fileRef.getDownloadURL());\r\n  };\r\n\r\n\r\n\r\n  const UploadData = async () => {\r\n    await db\r\n      .collection(\"project\")\r\n      .doc()\r\n      .set({\r\n        title,\r\n        content,\r\n        gitLink,\r\n        date: Date.now(),\r\n        avatar: await fileUrl,\r\n      });\r\n  };\r\n\r\n  const { TextArea } = Input;\r\n\r\n  return (\r\n    <div className='ProjectUploadControl'>\r\n      <div className='SubProjectUpload'>\r\n        <div className='ProjUploadControl'>\r\n          <div style={{ color: '#ddd' }}>Upload A Short Video Clip</div>\r\n          <input\r\n            onChange={videoUpload}\r\n            className=\"InputTextAreaDiv\"\r\n            type=\"file\"\r\n            style={{ backgroundColor: 'gray' }}\r\n          />\r\n\r\n\r\n          <Input\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n            type='text'\r\n            placeholder=\"Title Of Your Project\"\r\n            name=\" name\"\r\n            className=\"InputTextAreaDiv\"\r\n          />\r\n\r\n\r\n          <TextArea rows={4}\r\n            value={content}\r\n            onChange={(e) => {\r\n              setContent(e.target.value);\r\n            }}\r\n            type='text'\r\n            placeholder='Write A Little Discription'\r\n            className=\"InputTextAreaDiv\"\r\n          />\r\n\r\n          <Input\r\n            placeholder='Input Your Ripo Link'\r\n            value={gitLink}\r\n            onChange={(e) => {\r\n              setGitLink(e.target.value)\r\n            }}\r\n            className=\"InputTextAreaDiv\"\r\n          />\r\n\r\n\r\n          <Button\r\n            onClick={() => {\r\n              UploadData();\r\n              // hist.push(\"/home\")\r\n            }}\r\n            style={{ color: '#fff', fontWeight: 'bold', backgroundColor: '#4081ec' }}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ProjUpload\r\n","C:\\Users\\Sammy\\Desktop\\React\\ProjectWeb\\build\\src\\Components\\UploadCard\\UpCard.js",["62"],"import React, { useEffect, useState } from 'react'\r\nimport './UpCard.css'\r\nimport vid from '../video/vid.mp4'\r\nimport gitlogo from '../Images/gitround.png'\r\nimport { app } from '../Base/Base'\r\n\r\nconst db = app.firestore();\r\nfunction UpCard() {\r\n  const [uploads, setUploads] = useState([]);\r\n\r\n  const getData = async () => {\r\n    await db\r\n      .collection('project')\r\n\r\n      .onSnapshot((snap) => {\r\n        const item = [];\r\n        snap.forEach((doc) => {\r\n          item.push(doc.data());\r\n        });\r\n        setUploads(item);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {\r\n        uploads.map(({ avatar, title, content, gitLink }) => (\r\n          <div className='UpMainCard'>\r\n            <video src={avatar} type=\"video/mp4\" autoPlay loop muted className='UpVidDiv' />\r\n            <div className='UpImgTxtHod'>\r\n              <a style={{ zIndex: '999' }} href={gitLink}> <img src={gitlogo} alt='' className='IconDiv' /></a>\r\n              <div className='ProjTitle'> {title} </div>\r\n              <div className='ProjContent'> {content}  </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpCard\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":34,"column":9,"nodeType":"69","messageId":"70","endLine":43,"endColumn":10},{"ruleId":"67","severity":1,"message":"68","line":51,"column":9,"nodeType":"69","messageId":"70","endLine":59,"endColumn":10},{"ruleId":"71","severity":1,"message":"72","line":123,"column":6,"nodeType":"73","endLine":123,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":10,"column":9,"nodeType":"77","messageId":"78","endLine":10,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'hist' is assigned a value but never used.","'vid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [authListener]",{"range":"86","text":"87"},[3424,3426],"[authListener]"]